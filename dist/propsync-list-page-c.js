document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".accordion_list"),t=Array.from(document.querySelectorAll(".accordion_component .card-wrapper")),r=document.querySelector(".accordion_accordion");if(!e||!r||0===t.length){console.error("Required elements not found. Make sure .accordion_list, .accordion_accordion, and .card-wrapper elements exist.");const e=document.querySelector(".accordion_component");return void(e&&(e.style.display="none"))}const o={};t.forEach((e=>{const t=e.querySelector(".bedroom-card-value"),r=e.querySelector(".price-min-card-value");if(t&&r){const n=t.textContent.trim(),c=parseInt(r.textContent.trim().replace(/[^0-9]/g,""),10),a=function(e){const t=parseInt(e,10);return isNaN(t)?"Unknown":0===t?"Studio":1===t?"1 Bedroom":`${t} Bedroom`}(n),i=parseInt(n,10);if(isNaN(c)||c<0)return void console.warn("Skipping card with invalid or negative price:",c,"for type:",a,e);o[a]||(o[a]={cards:[],minPrice:1/0,numericBedValue:isNaN(i)?1/0:i}),o[a].cards.push(e),o[a].minPrice=Math.min(o[a].minPrice,c)}else console.warn("Skipping card, missing bed or price element:",e)}));const n=Object.keys(o).sort(((e,t)=>{const r=o[e],n=o[t];return r.numericBedValue-n.numericBedValue}));e.innerHTML="",n.forEach((t=>{const n=o[t];if(n.cards.length>0){const o=r.cloneNode(!0),c=o.querySelector(".accordion_question"),a=o.querySelector(".accordion_answer"),i=o.querySelector(".floorplan-accordian-text"),l=o.querySelector(".floorplan-collection-list");if(!(c&&a&&i&&l))return void console.error("Template accordion structure is missing required elements.");const s=`${t} Starting at $${n.minPrice.toLocaleString()} -- Number of ${n.cards.length} Floorplans`;i.textContent=s;const d=o.querySelector(".bedroom-text");d&&(d.textContent=t),l.innerHTML="",n.cards.forEach((e=>{l.appendChild(e)})),a.style.maxHeight="0px",a.style.opacity="0",a.style.overflow="hidden",o.classList.remove("active"),e.appendChild(o)}})),e.addEventListener("click",(function(e){const t=e.target.closest(".accordion_question");if(!t)return;const r=t.closest(".accordion_accordion");if(!r)return;const o=r.querySelector(".accordion_answer"),n=t.querySelector(".accordion_icon-wrapper");if(!o||!n)return;r.classList.contains("active")?(o.style.maxHeight="0px",o.style.opacity="0",n.style.transform="rotate(0deg)",r.classList.remove("active")):(r.classList.add("active"),o.style.maxHeight=o.scrollHeight+"px",o.style.opacity="1",n.style.transform="rotate(45deg)")}));document.querySelectorAll(".card-wrapper").forEach((function(e){e.querySelectorAll(".price-min-card-value, .price-max-card-value").forEach((e=>{if(e.textContent){const t=e.textContent.trim().replace(/[^0-9.]+/g,""),r=parseInt(t,10);!isNaN(r)&&r>=0&&(e.textContent=r.toLocaleString())}}));e.querySelectorAll(".sqr-min-card-value, .sqr-max-card-value").forEach((e=>{if(e.textContent){const t=e.textContent.trim().replace(/[^0-9.]+/g,""),r=parseInt(t,10);isNaN(r)||(e.textContent=r.toLocaleString())}}));const t=e.querySelector(".sqr-min-card-value"),r=e.querySelector(".sqr-max-card-value"),o=e.querySelector(".sqr-spacer");t&&r&&o&&t.textContent===r.textContent&&(o.style.display="none",r.style.display="none");const n=e.querySelector(".price-min-card-value"),c=e.querySelector(".price-max-card-value"),a=e.querySelector(".price-spacer"),i=e.querySelector(".price-max-dollar"),l=e.querySelector(".startingat");n&&c&&a&&n.textContent===c.textContent&&(a.style.display="none",c.style.display="none",i&&(i.style.display="none"),l&&(l.style.display="inline"))}))}));