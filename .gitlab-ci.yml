stages:
  - build
  - deploy

variables:
  NODE_VERSION: "18"

cache:
  paths:
    - node_modules/

build_scripts:
  stage: build
  image: node:${NODE_VERSION}-alpine
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run build
    - echo "Build completed successfully"
    - ls -la dist/
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
  only:
    - master
    - main
    - develop

deploy_to_repo:
  stage: deploy
  image: node:${NODE_VERSION}-alpine
  dependencies:
    - build_scripts
  before_script:
    - apk add --no-cache git openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email "ci@omibee.com"
    - git config --global user.name "GitLab CI"
  script:
    - git add dist/
    - |
      if ! git diff --cached --quiet; then
        git commit -m "CI: Update compressed JavaScript files [skip ci]"
        git push https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git HEAD:${CI_COMMIT_REF_NAME}
        echo "âœ… Compressed files updated and pushed to GitLab"

        # Sync to GitHub
        git remote add github git@github.com:rfmarcelino/propsync.git || echo "GitHub remote already exists"
        git push github HEAD:master
        echo "âœ… Changes synced to GitHub"

        echo "ðŸ“‹ Files available via jsDelivr CDN:"
        echo "   https://cdn.jsdelivr.net/gh/rfmarcelino/propsync@master/dist/propsync-page-template.js"
        echo "   https://cdn.jsdelivr.net/gh/rfmarcelino/propsync@master/dist/propsync-list-page-a-b.js"
        echo "   https://cdn.jsdelivr.net/gh/rfmarcelino/propsync@master/dist/propsync-list-page-c.js"
      else
        echo "âœ… No changes in compressed files"
      fi
  only:
    - master
    - main


